name: 'openpilot env setup'

env:

inputs:
  sleep_time:
    description: 'Time to sleep between retries'
    required: false
    default: '30'

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Echo confirmation
      run: |
        start=$(date +%s)
        echo "Starting openpilot environment setup..."
        end=$(date +%s)
        runtime=$((end-start))
        echo "ECHO_CONFIRMATION_RUNTIME=$runtime" >> $GITHUB_ENV
      shell: bash

    - name: Git LFS Pull
      run: |
        start=$(date +%s)
        git lfs pull || { echo "Git LFS pull failed"; exit 1; }
        end=$(date +%s)
        runtime=$((end-start))
        echo "GIT_LFS_PULL_RUNTIME=$runtime" >> $GITHUB_ENV
      shell: bash

    # Set environment variables
    - name: Set environment variables
      run: |
        echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
        echo "LANGUAGE=en_US:en" >> $GITHUB_ENV
        echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
        echo "NVIDIA_VISIBLE_DEVICES=all" >> $GITHUB_ENV
        echo "NVIDIA_DRIVER_CAPABILITIES=graphics,utility,compute" >> $GITHUB_ENV
        echo "QTWEBENGINE_DISABLE_SANDBOX=1" >> $GITHUB_ENV
      shell: bash







    - name: Normalize file permissions
      run: |
        start=$(date +%s)
        set -e
        find . -type f -executable -not -perm 755 -exec chmod 755 {} \; || { echo "Failed to set executable files to 755"; exit 1; }
        find . -type f -not -executable -not -perm 644 -exec chmod 644 {} \; || { echo "Failed to set non-executable files to 644"; exit 1; }
        end=$(date +%s)
        runtime=$((end-start))
        echo "NORM_FILE_PERMS_RUNTIME=$runtime" >> $GITHUB_ENV
      shell: bash

    # - name: Print timings
    #   run: |
    #     echo "Cache hit statuses:"
    #     echo "OpenCL Driver: ${CACHE_HIT_OPENCL_DRIVER}"
    #     echo "Pyenv: ${CACHE_HIT_PYENV}"
    #     echo "Pip: ${CACHE_HIT_PIP}"
    #     echo "Pre-commit Hooks: ${CACHE_HIT_PRE_COMMIT}"
    #     echo "Poetry Virtual Environment: ${CACHE_HIT_POETRY_VENV}"

    #     echo "Runtime debug messages:"
    #     echo "Echo confirmation runtime: ${ECHO_CONFIRMATION_RUNTIME} seconds"
    #     echo "Git LFS Pull runtime: ${GIT_LFS_PULL_RUNTIME} seconds"
    #     echo "Python dependencies installation runtime: ${PYTHON_DEPS_INSTALL_TIME} seconds"
    #     echo "Normalization of file permissions runtime: ${NORM_FILE_PERMS_RUNTIME} seconds"
    #     # Add similar echo statements for other timings you have recorded
    #   shell: bash
