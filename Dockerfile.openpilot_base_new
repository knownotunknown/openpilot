# Stage 1: Build stage
FROM python:3.11-bullseye AS build

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    autoconf \
    portaudio19-dev \
    libssl-dev \
    libzmq3-dev \
    alien \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

COPY pyproject.toml poetry.lock .python-version README.md /tmp/

RUN python3 -m pip install --upgrade --no-cache-dir pip==23.3 && \
    pip install --no-cache-dir poetry==1.6.1 && \
    poetry config virtualenvs.create false && \
    cd /tmp/ && \
    poetry install --only main

# Install OpenCL
RUN mkdir -p /tmp/opencl-driver-intel && \
    cd /tmp/opencl-driver-intel && \
    wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
    wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz && \
    mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
    cd /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
    tar -zxvf /tmp/opencl-driver-intel/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
    mkdir -p /etc/OpenCL/vendors && \
    echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so > /etc/OpenCL/vendors/intel_expcpu.icd && \
    cd /opt/intel && \
    tar -zxvf /tmp/opencl-driver-intel/oneapi-tbb-2021.12.0-lin.tgz && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so.12 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so.2 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    mkdir -p /etc/ld.so.conf.d && \
    echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 > /etc/ld.so.conf.d/libintelopenclexp.conf && \
    ldconfig -f /etc/ld.so.conf.d/libintelopenclexp.conf && \
    cd / && \
    rm -rf /tmp/opencl-driver-intel

# Stage 2: Final stage
FROM ubuntu:24.04

ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Copy Python environment and OpenCL files from build stage
COPY --from=build /usr/local /usr/local
COPY --from=build /opt/intel /opt/intel
COPY --from=build /etc/OpenCL /etc/OpenCL
COPY --from=build /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.7

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    sudo \
    tzdata \
    locales \
    ssh \
    pulseaudio \
    xvfb \
    x11-xserver-utils \
    gnome-screenshot \
    apt-utils \
    alien \
    unzip \
    tar \
    curl \
    xz-utils \
    dbus \
    gcc-arm-none-eabi \
    tmux \
    vim \
    libx11-6 \
    wget \
    git \
    scons \
    libportaudio2 \
    libssl3 \
    libzmq5 \
    && rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute
ENV QTWEBENGINE_DISABLE_SANDBOX 1

RUN dbus-uuidgen > /etc/machine-id

ARG USER=batman
ARG USER_UID=1001
RUN useradd -m -s /bin/bash -u $USER_UID $USER
RUN usermod -aG sudo $USER
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

COPY tools/install_ubuntu_dependencies.sh /tmp/tools/
RUN INSTALL_EXTRA_PACKAGES=no /tmp/tools/install_ubuntu_dependencies.sh && \
    rm -rf /var/lib/apt/lists/* /tmp/* && \
    cd /usr/lib/gcc/arm-none-eabi/* && \
    rm -rf arm/ thumb/nofp thumb/v6* thumb/v8* thumb/v7+fp thumb/v7-r+fp.sp

# ARG OPENPILOT_PATH="/tmp/openpilot"

# RUN mkdir -p ${OPENPILOT_PATH}
# COPY SConstruct ${OPENPILOT_PATH}
# COPY ./openpilot ${OPENPILOT_PATH}/openpilot
# COPY ./third_party ${OPENPILOT_PATH}/third_party
# COPY ./site_scons ${OPENPILOT_PATH}/site_scons
# COPY ./rednose ${OPENPILOT_PATH}/rednose
# COPY ./rednose_repo/site_scons ${OPENPILOT_PATH}/rednose_repo/site_scons
# COPY ./tools ${OPENPILOT_PATH}/tools
# COPY ./release ${OPENPILOT_PATH}/release
# COPY ./common ${OPENPILOT_PATH}/common
# COPY ./opendbc ${OPENPILOT_PATH}/opendbc
# COPY ./cereal ${OPENPILOT_PATH}/cereal
# COPY ./panda ${OPENPILOT_PATH}/panda
# COPY ./selfdrive ${OPENPILOT_PATH}/selfdrive
# COPY ./system ${OPENPILOT_PATH}/system
# COPY ./body ${OPENPILOT_PATH}/body

# WORKDIR ${OPENPILOT_PATH}

# Create a symbolic link for libpython3.11.so.1.0
RUN ln -s /usr/local/lib/libpython3.11.so.1.0 /usr/lib/libpython3.11.so.1.0

# Update the library cache
RUN ldconfig

RUN git config --global --add safe.directory /tmp/openpilot

# RUN scons --cache-readonly -j$(nproc)