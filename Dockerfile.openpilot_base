ARG BUILDER_WORKDIR="/tmp/openpilot"

# Base image
FROM ubuntu:20.04 as builder

# Environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8 \
    PYTHONUNBUFFERED=1

# Working directory
WORKDIR /app

# Install dependencies in a single layer and clean up in the same step
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot \
        apt-utils alien unzip tar curl xz-utils dbus gcc-arm-none-eabi tmux vim lsb-core libx11-6 wget && \
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen && \
    rm -rf /var/lib/apt/lists/*

# Copy necessary files
COPY pyproject.toml poetry.lock .python-version tools/install_ubuntu_dependencies.sh /tmp/openpilot/

# Install Python dependencies and OpenCL
RUN cd /tmp && \
    ./openpilot/tools/install_ubuntu_dependencies.sh && \
    wget https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tgz && \
    tar -xf Python-3.11.0.tgz && \
    cd Python-3.11.0 && \
    ./configure --enable-optimizations && \
    make -j$(nproc) && \
    make altinstall && \
    cd .. && \
    rm -rf Python-3.11.0.tgz Python-3.11.0 && \
    ln -sf /usr/local/bin/python3.11 /usr/bin/python3 && \
    python3 -m pip install --upgrade pip==23.3 && \
    pip install poetry==1.6.1 && \
    poetry config virtualenvs.in-project true && \
    rm -rf /tmp/* /var/lib/apt/lists/* /usr/lib/gcc/arm-none-eabi/9.2.1/arm /usr/lib/gcc/arm-none-eabi/9.2.1/thumb

# Install Poetry dependencies
RUN cd /tmp/openpilot/ && poetry install --only main

# Copy the entire project to a temporary directory for building
COPY . ${BUILDER_WORKDIR}

# Set the working directory to the temporary directory
WORKDIR ${BUILDER_WORKDIR}

RUN /bin/bash -c "source /tmp/openpilot/.venv/bin/activate && scons -j$(nproc) > /dev/null"

# Configure Git
RUN git config --global --add safe.directory /tmp/openpilot

# Final runtime stage
FROM ubuntu:20.04

ARG WORKDIR

# Environment variables for the runtime stage
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8 \
    PYTHONUNBUFFERED=1

WORKDIR ${WORKDIR}

# Copy the built application from the builder stage
COPY --from=builder /tmp/openpilot .


# FROM ghcr.io/commaai/openpilot-base:latest

# # Use the ARG in the builder stage
# ARG BUILDER_WORKDIR

# # Set environment variable
# ENV PYTHONUNBUFFERED 1

# # Copy the entire project to a temporary directory for building
# COPY . ${BUILDER_WORKDIR}

# # Set the working directory to the temporary directory
# WORKDIR ${BUILDER_WORKDIR}

# # Build command
# # RUN /bin/bash -c "scons -j$(nproc)"
# RUN /bin/bash -c "scons -j$(nproc)"

