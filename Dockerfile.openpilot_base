# Builder stage to install dependencies and set up Python environment
FROM ubuntu:20.04 AS builder

ENV PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Install necessary Ubuntu packages and Python build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    sudo \
    git \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    llvm \
    libncurses5-dev \
    libncursesw5-dev \
    xz-utils \
    tk-dev \
    libffi-dev \
    liblzma-dev \
    python-openssl \
    tzdata \
    locales \
    ssh \
    pulseaudio \
    xvfb \
    x11-xserver-utils \
    gnome-screenshot \
    apt-utils \
    alien \
    unzip \
    tar \
    dbus \
    gcc-arm-none-eabi \
    tmux \
    vim \
    lsb-core \
    libx11-6 \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && locale-gen \
    && rm -rf /var/lib/apt/lists/*

ARG USER=batman
ARG USER_UID=1000

# Create a non-root user and switch to it
RUN useradd -m -s /bin/bash -u $USER_UID $USER \
    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER $USER
WORKDIR /home/$USER

# Copy the Python dependency installation script into the container
COPY --chown=$USER tools/install_python_dependencies.sh /tmp/

# Execute the installation script
RUN chmod +x /tmp/install_python_dependencies.sh \
    && /tmp/install_python_dependencies.sh \
    && rm /tmp/install_python_dependencies.sh

# Runtime stage to prepare the final image
FROM ubuntu:20.04 AS runtime

ARG USER=batman

# Copy the Python environment setup from the builder stage
COPY --from=builder /home/$USER /home/$USER

# Set environment variables for the runtime
ENV PYENV_ROOT="/home/$USER/.pyenv" \
    PATH="/home/$USER/.pyenv/bin:/home/$USER/.pyenv/shims:$PATH"

USER $USER
WORKDIR /home/$USER

# Set the default command for the container
CMD ["/bin/bash"]
