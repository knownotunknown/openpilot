# FROM ubuntu:24.04

# ENV PYTHONUNBUFFERED 1

# ENV DEBIAN_FRONTEND=noninteractive
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot && \
#     rm -rf /var/lib/apt/lists/*

# RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen
# ENV LANG en_US.UTF-8
# ENV LANGUAGE en_US:en
# ENV LC_ALL en_US.UTF-8

# COPY tools/install_ubuntu_dependencies.sh /tmp/tools/
# RUN INSTALL_EXTRA_PACKAGES=no /tmp/tools/install_ubuntu_dependencies.sh && \
#     rm -rf /var/lib/apt/lists/* /tmp/* && \
#     cd /usr/lib/gcc/arm-none-eabi/* && \
#     rm -rf arm/ thumb/nofp thumb/v6* thumb/v8* thumb/v7+fp thumb/v7-r+fp.sp

# # Add OpenCL
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     apt-utils \
#     alien \
#     unzip \
#     tar \
#     curl \
#     xz-utils \
#     dbus \
#     gcc-arm-none-eabi \
#     tmux \
#     vim \
#     libx11-6 \
#     wget \
#   && rm -rf /var/lib/apt/lists/*

# RUN mkdir -p /tmp/opencl-driver-intel && \
#     cd /tmp/opencl-driver-intel && \
#     wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
#     wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz && \
#     mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
#     cd /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
#     tar -zxvf /tmp/opencl-driver-intel/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
#     mkdir -p /etc/OpenCL/vendors && \
#     echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so > /etc/OpenCL/vendors/intel_expcpu.icd && \
#     cd /opt/intel && \
#     tar -zxvf /tmp/opencl-driver-intel/oneapi-tbb-2021.12.0-lin.tgz && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so.12 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so.2 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     mkdir -p /etc/ld.so.conf.d && \
#     echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 > /etc/ld.so.conf.d/libintelopenclexp.conf && \
#     ldconfig -f /etc/ld.so.conf.d/libintelopenclexp.conf && \
#     cd / && \
#     rm -rf /tmp/opencl-driver-intel

# ENV NVIDIA_VISIBLE_DEVICES all
# ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute
# ENV QTWEBENGINE_DISABLE_SANDBOX 1

# RUN dbus-uuidgen > /etc/machine-id

# ARG USER=batman
# ARG USER_UID=1001
# RUN useradd -m -s /bin/bash -u $USER_UID $USER
# RUN usermod -aG sudo $USER
# RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# USER $USER

# COPY --chown=$USER pyproject.toml uv.lock /tmp/
# COPY --chown=$USER tools/install_python_dependencies.sh /tmp/tools/

# ENV VIRTUAL_ENV=/home/$USER/.venv
# ENV PATH="$VIRTUAL_ENV/bin:$PATH"
# RUN cd /tmp && \
#     tools/install_python_dependencies.sh && \
#     mkdir -p $VIRTUAL_ENV && \
#     cp -r /tmp/.venv/* $VIRTUAL_ENV && \
#     rm -rf /tmp/* && \
#     rm -rf /home/$USER/.cache

# # ARG OPENPILOT_PATH="/tmp/openpilot"

# # RUN mkdir -p ${OPENPILOT_PATH}
# # COPY SConstruct ${OPENPILOT_PATH}
# # COPY ./openpilot ${OPENPILOT_PATH}/openpilot
# # COPY ./third_party ${OPENPILOT_PATH}/third_party
# # COPY ./site_scons ${OPENPILOT_PATH}/site_scons
# # COPY ./rednose ${OPENPILOT_PATH}/rednose
# # COPY ./rednose_repo/site_scons ${OPENPILOT_PATH}/rednose_repo/site_scons
# # COPY ./tools ${OPENPILOT_PATH}/tools
# # COPY ./release ${OPENPILOT_PATH}/release
# # COPY ./common ${OPENPILOT_PATH}/common
# # COPY ./opendbc ${OPENPILOT_PATH}/opendbc
# # COPY ./cereal ${OPENPILOT_PATH}/cereal
# # COPY ./panda ${OPENPILOT_PATH}/panda
# # COPY ./selfdrive ${OPENPILOT_PATH}/selfdrive
# # COPY ./system ${OPENPILOT_PATH}/system
# # COPY ./body ${OPENPILOT_PATH}/body

# # WORKDIR ${OPENPILOT_PATH}

# USER root
# RUN sudo git config --global --add safe.directory /tmp/openpilot

# # RUN scons --cache-readonly -j$(nproc)

# # Stage 1: Build stage
# FROM python:3.11-bookworm AS build

# ENV PYTHONUNBUFFERED=1 \
#     PYTHONDONTWRITEBYTECODE=1

# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#     build-essential \
#     autoconf \
#     portaudio19-dev \
#     libssl-dev \
#     libzmq3-dev \
#     alien \
#     curl \
#     wget \
#     libffi-dev \
#     && rm -rf /var/lib/apt/lists/*

# COPY pyproject.toml README.md /tmp/

# RUN python3 -m pip install --upgrade --no-cache-dir pip && \
#     pip install --no-cache-dir build && \
#     cd /tmp/ && \
#     pip install -e ".[testing]"

# # Install OpenCL
# RUN mkdir -p /tmp/opencl-driver-intel && \
#     cd /tmp/opencl-driver-intel && \
#     wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
#     wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz && \
#     mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
#     cd /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
#     tar -zxvf /tmp/opencl-driver-intel/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
#     mkdir -p /etc/OpenCL/vendors && \
#     echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so > /etc/OpenCL/vendors/intel_expcpu.icd && \
#     cd /opt/intel && \
#     tar -zxvf /tmp/opencl-driver-intel/oneapi-tbb-2021.12.0-lin.tgz && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so.12 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so.2 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
#     mkdir -p /etc/ld.so.conf.d && \
#     echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 > /etc/ld.so.conf.d/libintelopenclexp.conf && \
#     ldconfig -f /etc/ld.so.conf.d/libintelopenclexp.conf && \
#     cd / && \
#     rm -rf /tmp/opencl-driver-intel

# # Stage 2: Final stage
# FROM ubuntu:24.04

# ENV PYTHONUNBUFFERED=1 \
#     DEBIAN_FRONTEND=noninteractive \
#     LANG=en_US.UTF-8 \
#     LANGUAGE=en_US:en \
#     LC_ALL=en_US.UTF-8 \
#     PATH="/usr/local/bin:${PATH}"

# # Copy Python environment and OpenCL files from build stage
# COPY --from=build /usr/local /usr/local
# COPY --from=build /opt/intel /opt/intel
# COPY --from=build /etc/OpenCL /etc/OpenCL
# COPY --from=build /usr/lib/x86_64-linux-gnu/libffi.so.8 /usr/lib/x86_64-linux-gnu/libffi.so.8

# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#     sudo \
#     tzdata \
#     locales \
#     ssh \
#     pulseaudio \
#     xvfb \
#     x11-xserver-utils \
#     gnome-screenshot \
#     apt-utils \
#     alien \
#     unzip \
#     tar \
#     curl \
#     xz-utils \
#     dbus \
#     gcc-arm-none-eabi \
#     tmux \
#     vim \
#     libx11-6 \
#     wget \
#     git \
#     scons \
#     libportaudio2 \
#     libssl3 \
#     libzmq5 \
#     libffi8 \
#     python3 \
#     python3-dev \
#     python3-pip \
#     && rm -rf /var/lib/apt/lists/*

# RUN pip3 install wheel

# RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen

# ENV NVIDIA_VISIBLE_DEVICES all
# ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute
# ENV QTWEBENGINE_DISABLE_SANDBOX 1

# RUN dbus-uuidgen > /etc/machine-id

# ARG USER=batman
# ARG USER_UID=1001
# RUN useradd -m -s /bin/bash -u $USER_UID $USER
# RUN usermod -aG sudo $USER
# RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# COPY tools/install_ubuntu_dependencies.sh /tmp/tools/
# RUN INSTALL_EXTRA_PACKAGES=no /tmp/tools/install_ubuntu_dependencies.sh && \
#     rm -rf /var/lib/apt/lists/* /tmp/* && \
#     cd /usr/lib/gcc/arm-none-eabi/* && \
#     rm -rf arm/ thumb/nofp thumb/v6* thumb/v8* thumb/v7+fp thumb/v7-r+fp.sp

# # Create a symbolic link for libpython3.11.so.1.0
# RUN ln -s /usr/local/lib/libpython3.11.so.1.0 /usr/lib/libpython3.11.so.1.0

# # Update the library cache
# RUN ldconfig

# RUN git config --global --add safe.directory /tmp/openpilot

# # Verify pytest is installed
# RUN pytest --version

# Stage 1: Build stage
FROM ubuntu:24.04 AS builder

ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot \
    apt-utils alien unzip tar curl xz-utils dbus gcc-arm-none-eabi tmux vim libx11-6 wget git \
    python3 python3-pip python3-dev python3-venv \
    libasound2-dev portaudio19-dev libportaudio2 libportaudiocpp0 && \
    rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen

# Add OpenCL
RUN mkdir -p /tmp/opencl-driver-intel && \
    cd /tmp/opencl-driver-intel && \
    wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
    wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz && \
    mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
    cd /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
    tar -zxvf /tmp/opencl-driver-intel/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
    mkdir -p /etc/OpenCL/vendors && \
    echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so > /etc/OpenCL/vendors/intel_expcpu.icd && \
    cd /opt/intel && \
    tar -zxvf /tmp/opencl-driver-intel/oneapi-tbb-2021.12.0-lin.tgz && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so.12 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so.2 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
    mkdir -p /etc/ld.so.conf.d && \
    echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 > /etc/ld.so.conf.d/libintelopenclexp.conf && \
    ldconfig -f /etc/ld.so.conf.d/libintelopenclexp.conf && \
    cd / && \
    rm -rf /tmp/opencl-driver-intel

# Set up Python environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install Python dependencies
COPY pyproject.toml uv.lock /tmp/
COPY tools/install_python_dependencies.sh /tmp/tools/
RUN . $VIRTUAL_ENV/bin/activate && \
    pip install --upgrade pip && \
    cd /tmp && \
    tools/install_python_dependencies.sh && \
    rm -rf /tmp/* ~/.cache

RUN . $VIRTUAL_ENV/bin/activate && scons --version

# Stage 2: Final stage
FROM ubuntu:24.04

ENV PYTHONUNBUFFERED 1
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV PYTHONPATH=/tmp/openpilot
ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot \
    python3 libx11-6 git \
    libasound2-dev portaudio19-dev libportaudio2 libportaudiocpp0 && \
    rm -rf /var/lib/apt/lists/*

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen

COPY --from=builder /opt/intel /opt/intel
COPY --from=builder /etc/OpenCL /etc/OpenCL
COPY --from=builder /etc/ld.so.conf.d/libintelopenclexp.conf /etc/ld.so.conf.d/
COPY --from=builder $VIRTUAL_ENV $VIRTUAL_ENV

RUN ldconfig

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute
ENV QTWEBENGINE_DISABLE_SANDBOX 1

RUN dbus-uuidgen > /etc/machine-id

ARG USER=batman
ARG USER_UID=1001
RUN useradd -m -s /bin/bash -u $USER_UID $USER
RUN usermod -aG sudo $USER
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

USER $USER

RUN echo "source $VIRTUAL_ENV/bin/activate" >> /home/$USER/.bashrc

USER root
RUN git config --global --add safe.directory /tmp/openpilot

WORKDIR /tmp/openpilot

CMD ["/bin/bash", "-c", "source $VIRTUAL_ENV/bin/activate && exec /bin/bash"]